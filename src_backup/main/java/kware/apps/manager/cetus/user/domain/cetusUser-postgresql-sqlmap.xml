<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="cetusUser">

	<select id="view" resultType="cetusUser" parameterType="Long">
		/* cetusUser.view */
		SELECT CU.UID
			  ,CU.USER_ID
			  ,CU.PASSWORD
			  ,CU.USER_NM
		      ,CU.USER_EMAIL
		      ,CU.AUTHOR_CD
			  ,CU.STATUS
			  ,CU.FAIL_CNT
		      ,CU.PROFILE_UID
		      ,CU.META_DATA
			  ,CU.USE_AT
			  ,CU.APPROVE_AT
		  FROM CETUS_USER CU
	     WHERE CU.UID = #{uid}
	</select>

	<select id="viewById" resultType="cetusUser" parameterType="String">
		/* cetusUser.viewById */
		SELECT CU.UID
			  ,CU.USER_ID
			  ,CU.PASSWORD
			  ,CU.USER_NM
		      ,CU.USER_EMAIL
		      ,CU.AUTHOR_CD
			  ,CU.STATUS
			  ,CU.FAIL_CNT
		      ,CU.PROFILE_UID
		      ,CU.META_DATA
			  ,CU.USE_AT
			  ,CU.APPROVE_AT
		  FROM CETUS_USER CU
	     WHERE CU.USER_ID = #{userId}
	</select>

	<insert id="insert" parameterType="cetusUser" useGeneratedKeys="true" keyProperty="uid">
		/* cetusUser.insert */
		INSERT INTO CETUS_USER (
			USER_ID
		   ,PASSWORD
		   ,USER_NM
		   ,USER_EMAIL
		   ,STATUS
			,META_DATA
		   ,AUTHOR_CD
		   ,APPROVE_AT
		   ,USE_AT
		   ,FAIL_CNT
		   ,REG_DT
		   ,UPDT_DT
		<if test="regUid != null">, REG_UID</if>
		<if test="updtUid != null">, UPDT_UID</if>
		) VALUES (
			#{userId}
		   ,#{password}
		   ,#{userNm}
		   ,#{userEmail}
		   ,#{status}
			,CAST(#{metaData} AS jsonb)
		   ,#{authorCd}
		   ,'Y'
		   ,'Y'
		   ,0
		   ,NOW()
		   ,NOW()
		<if test="regUid != null">, #{regUid}</if>
		<if test="updtUid != null">, #{updtUid}</if>
		)
	</insert>

	<update id="updateUserInfo" parameterType="cetusUser">
		/* cetusUser.updateUserInfo */
		UPDATE CETUS_USER
		   SET UPDT_UID = #{updtUid}
		      ,UPDT_DT = NOW()
			  ,USER_NM = #{userNm}
		      ,USER_EMAIL = #{userEmail}
		      ,AUTHOR_CD = #{authorCd}
		      ,META_DATA = #{metaData}::jsonb
	     WHERE UID = #{uid}
	</update>

	<update id="updateUserMyInfo" parameterType="cetusUser">
		/* cetusUser.updateUserMyInfo */
		UPDATE CETUS_USER
		   SET UPDT_UID = #{updtUid}
		      ,UPDT_DT = NOW()
			  ,USER_NM = #{userNm}
		      ,USER_EMAIL = #{userEmail}
		      ,PASSWORD = #{password}
		      ,META_DATA = #{metaData}::jsonb
	     WHERE UID = #{uid}
	</update>

	<update id="updateUserPassword" parameterType="CetusUser">
		/* cetusUser.updateUserPassword */
		UPDATE CETUS_USER
		   SET UPDT_UID = #{updtUid}
			  ,UPDT_DT = NOW()
			  ,PASSWORD = #{password}
		 WHERE UID = #{uid}
	</update>

	<update id="updateFailCnt" parameterType="cetusUser">
		/* cetusUser.updateFailCnt */
		UPDATE CETUS_USER
		   SET FAIL_CNT = COALESCE(FAIL_CNT, 0) + 1
		 WHERE USER_ID = #{userId}
	</update>

	<update id="updateUserFailCnt" parameterType="cetusUser">
		/* cetusUser.updateUserFailCnt */
		UPDATE CETUS_USER
		   SET FAIL_CNT = 0
		 WHERE USER_ID = #{userId}
	</update>

	<update id="updateUserUseAt" parameterType="cetusUser">
		/* cetusUser.updateUserUseAt */
		UPDATE CETUS_USER
		   SET USE_AT = (CASE USE_AT WHEN 'N' THEN 'Y' ELSE 'N' END)
		      ,FAIL_CNT = FAIL_CNT + 1
		 WHERE USER_ID = #{userId}
	</update>

	<select id="getUserByUserId" parameterType="String" resultType="UserFullInfo">
		/* cetusUser.getUserByUserId */
		SELECT CU.UID
			  ,CU.USER_ID
			  ,CU.PASSWORD
			  ,CU.USER_NM
		      ,CU.USER_EMAIL
			  ,CU.AUTHOR_CD AS ROLE
			  ,CASE WHEN CU.AUTHOR_CD = 'SUPER' THEN '슈퍼 권한'
					WHEN CU.AUTHOR_CD = 'SYSTEM' THEN '시스템 권한'
					WHEN CU.AUTHOR_CD = 'MANAGER' THEN '운영자 권한'
					WHEN CU.AUTHOR_CD = 'USER' THEN '유저 권한'
				END AS ROLE_NM
			  ,CU.STATUS
			  ,CASE WHEN CU.STATUS = 'APPROVED' THEN '사용중'
					WHEN CU.STATUS = 'WAIT' THEN '승인 대기'
					WHEN CU.STATUS = 'STOP' THEN '정지'
				END AS STATUS_NM
		      ,CU.FAIL_CNT
		      ,CU.PROFILE_UID
		      ,CF.FILE_ID AS PROFILE_ID
		      ,CU.META_DATA
		      ,CU.USE_AT
		      ,CU.APPROVE_AT
		      ,CW.UID AS WORKPLACE_UID
		      ,CW.NAME AS WORKPLACE_NM
		      ,CG.UID AS GROUP_UID
		      ,COALESCE(CG.NAME, '소속 없음') AS GROUP_NM
		      ,CD.UID AS DEPT_UID
		      ,COALESCE(CD.NAME, '부서 없음') AS DEPT_NM
			  ,CP.UID AS POSITION_UID
		      ,COALESCE(CP.NAME, '직급 없음') AS POSITION_NM
		  FROM CETUS_USER CU
		  LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CU.PROFILE_UID::BIGINT AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
		 INNER JOIN CETUS_WORKPLACE_USER CWU ON CWU.USER_UID = CU.UID
		 INNER JOIN CETUS_WORKPLACE CW ON CW.UID = CWU.WORKPLACE_UID
		  LEFT JOIN CETUS_GROUP_USER CGU ON CGU.USER_UID = CU.UID
		  LEFT JOIN CETUS_GROUP CG ON CG.UID = CGU.GROUP_UID
		  LEFT JOIN CETUS_DEPT_USER CDU ON CDU.USER_UID = CU.UID
		  LEFT JOIN CETUS_DEPT CD ON CD.UID = CDU.DEPT_UID
		  LEFT JOIN CETUS_POSITION_USER CPU ON CPU.USER_UID = CU.UID
		  LEFT JOIN CETUS_POSITION CP ON CP.UID = CPU.POSITION_UID
		 WHERE CU.USER_ID = #{userId}
	</select>

	<select id="getUserFullInfoByUserUid" parameterType="Long" resultType="UserFullInfo">
		/* cetusUser.getUserByUserId */
		SELECT CU.UID
			  ,CU.USER_ID
			  ,CU.PASSWORD
			  ,CU.USER_NM
		      ,CU.USER_EMAIL
			  ,CU.AUTHOR_CD AS ROLE
			  ,CASE WHEN CU.AUTHOR_CD = 'SUPER' THEN '슈퍼 권한'
					WHEN CU.AUTHOR_CD = 'SYSTEM' THEN '시스템 권한'
					WHEN CU.AUTHOR_CD = 'MANAGER' THEN '운영자 권한'
					WHEN CU.AUTHOR_CD = 'USER' THEN '유저 권한'
				END AS ROLE_NM
			  ,CU.STATUS
			  ,CASE WHEN CU.STATUS = 'APPROVED' THEN '사용중'
					WHEN CU.STATUS = 'WAIT' THEN '승인 대기'
					WHEN CU.STATUS = 'STOP' THEN '정지'
				END AS STATUS_NM
		      ,CU.FAIL_CNT
		      ,CU.PROFILE_UID
		      ,CF.FILE_ID AS PROFILE_ID
		      ,CU.META_DATA
		      ,CU.USE_AT
		      ,CU.APPROVE_AT
		      ,CW.UID AS WORKPLACE_UID
		      ,CW.NAME AS WORKPLACE_NM
		      ,CG.UID AS GROUP_UID
		      ,COALESCE(CG.NAME, '소속 없음') AS GROUP_NM
		      ,CD.UID AS DEPT_UID
			  ,COALESCE(CD.NAME, '부서 없음') AS DEPT_NM
			  ,CP.UID AS POSITION_UID
			  ,COALESCE(CP.NAME, '직급 없음') AS POSITION_NM
		  FROM CETUS_USER CU
		  LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CU.PROFILE_UID::BIGINT AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
		 INNER JOIN CETUS_WORKPLACE_USER CWU ON CWU.USER_UID = CU.UID
		 INNER JOIN CETUS_WORKPLACE CW ON CW.UID = CWU.WORKPLACE_UID
		  LEFT JOIN CETUS_GROUP_USER CGU ON CGU.USER_UID = CU.UID
		  LEFT JOIN CETUS_GROUP CG ON CG.UID = CGU.GROUP_UID
		  LEFT JOIN CETUS_DEPT_USER CDU ON CDU.USER_UID = CU.UID
		  LEFT JOIN CETUS_DEPT CD ON CD.UID = CDU.DEPT_UID
		  LEFT JOIN CETUS_POSITION_USER CPU ON CPU.USER_UID = CU.UID
		  LEFT JOIN CETUS_POSITION CP ON CP.UID = CPU.POSITION_UID
		 WHERE CU.UID = #{uid}
	</select>

	<select id="getUserInfoByUid" parameterType="Long" resultType="UserFullInfo">
		/* cetusUser.getUserInfoByUid */
		SELECT CU.UID
			  ,CU.USER_ID
			  ,CU.PASSWORD
			  ,CU.USER_NM
		      ,CU.USER_EMAIL
			  ,CU.AUTHOR_CD AS ROLE
			  ,CASE WHEN CU.AUTHOR_CD = 'SUPER' THEN '슈퍼 권한'
					WHEN CU.AUTHOR_CD = 'SYSTEM' THEN '시스템 권한'
					WHEN CU.AUTHOR_CD = 'MANAGER' THEN '운영자 권한'
					WHEN CU.AUTHOR_CD = 'USER' THEN '유저 권한'
				END AS ROLE_NM
			  ,CU.STATUS
			  ,CASE WHEN CU.STATUS = 'APPROVED' THEN '사용중'
					WHEN CU.STATUS = 'WAIT' THEN '승인 대기'
					WHEN CU.STATUS = 'STOP' THEN '정지'
				END AS STATUS_NM
			  ,CU.FAIL_CNT
			  ,CU.PROFILE_UID
			  ,CF.FILE_ID AS PROFILE_ID
			  ,CU.META_DATA
			  ,CU.USE_AT
			  ,CU.APPROVE_AT
			  ,CW.UID AS WORKPLACE_UID
			  ,CW.NAME AS WORKPLACE_NM
			  ,CG.UID AS GROUP_UID
			  ,COALESCE(CG.NAME, '소속 없음') AS GROUP_NM
			  ,CD.UID AS DEPT_UID
			  ,COALESCE(CD.NAME, '부서 없음') AS DEPT_NM
			  ,CP.UID AS POSITION_UID
			  ,COALESCE(CP.NAME, '직급 없음') AS POSITION_NM
		  FROM CETUS_USER CU
	 	  LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CU.PROFILE_UID::BIGINT AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
		 INNER JOIN CETUS_WORKPLACE_USER CWU ON CWU.USER_UID = CU.UID
		 INNER JOIN CETUS_WORKPLACE CW ON CW.UID = CWU.WORKPLACE_UID
		  LEFT JOIN CETUS_GROUP_USER CGU ON CGU.USER_UID = CU.UID
		  LEFT JOIN CETUS_GROUP CG ON CG.UID = CGU.GROUP_UID
		  LEFT JOIN CETUS_DEPT_USER CDU ON CDU.USER_UID = CU.UID
		  LEFT JOIN CETUS_DEPT CD ON CD.UID = CDU.DEPT_UID
		  LEFT JOIN CETUS_POSITION_USER CPU ON CPU.USER_UID = CU.UID
		  LEFT JOIN CETUS_POSITION CP ON CP.UID = CPU.POSITION_UID
		 WHERE CU.UID = #{uid}
	</select>

	<select id="userPageList" resultType="UserList" parameterType="UserListSearch">
		/* cetusUser.userPageList */
		SELECT CU.UID
			  ,CU.USER_ID
			  ,CU.PASSWORD
			  ,CU.USER_NM
		      ,CU.USER_EMAIL
			  ,CU.AUTHOR_CD AS ROLE
		      ,CASE WHEN CU.AUTHOR_CD = 'SUPER' THEN '슈퍼 권한'
		          	WHEN CU.AUTHOR_CD = 'SYSTEM' THEN '시스템 권한'
		          	WHEN CU.AUTHOR_CD = 'MANAGER' THEN '운영자 권한'
		          	WHEN CU.AUTHOR_CD = 'USER' THEN '유저 권한'
		        END AS ROLE_NM
			  ,CU.STATUS
		      ,CASE WHEN CU.STATUS = 'APPROVED' THEN '사용중'
		          	WHEN CU.STATUS = 'WAIT' THEN '승인 대기'
		          	WHEN CU.STATUS = 'STOP' THEN '정지'
				END AS STATUS_NM
			  ,CU.FAIL_CNT
			  ,CU.PROFILE_UID
			  ,CF.FILE_ID AS PROFILE_ID
			  ,CU.META_DATA
			  ,CU.USE_AT
			  ,CU.APPROVE_AT
			  ,CW.UID AS WORKPLACE_UID
			  ,CW.NAME AS WORKPLACE_NM
			  ,CG.UID AS GROUP_UID
			  ,COALESCE(CG.NAME, '소속 없음') AS GROUP_NM
			  ,CD.UID AS DEPT_UID
			  ,COALESCE(CD.NAME, '부서 없음') AS DEPT_NM
			  ,CP.UID AS POSITION_UID
			  ,COALESCE(CP.NAME, '직급 없음') AS POSITION_NM
			  ,TO_CHAR(CU.REG_DT, 'YYYY-MM-DD') AS REG_DT
		  FROM CETUS_USER CU
		  LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CU.PROFILE_UID::BIGINT AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
		 INNER JOIN CETUS_WORKPLACE_USER CWU ON CWU.USER_UID = CU.UID
		 INNER JOIN CETUS_WORKPLACE CW ON CW.UID = CWU.WORKPLACE_UID
		  LEFT JOIN CETUS_GROUP_USER CGU ON CGU.USER_UID = CU.UID
		  LEFT JOIN CETUS_GROUP CG ON CG.UID = CGU.GROUP_UID
		  LEFT JOIN CETUS_DEPT_USER CDU ON CDU.USER_UID = CU.UID
		  LEFT JOIN CETUS_DEPT CD ON CD.UID = CDU.DEPT_UID
		  LEFT JOIN CETUS_POSITION_USER CPU ON CPU.USER_UID = CU.UID
		  LEFT JOIN CETUS_POSITION CP ON CP.UID = CPU.POSITION_UID
	 	 WHERE 1 = 1
		   AND CWU.WORKPLACE_UID = #{workplaceUid}
		<if test="@Ognl@isNotEmpty(userId)">
			AND CU.USER_ID LIKE '%' || #{userId} || '%'
		</if>
		<if test="@Ognl@isNotEmpty(userNm)">
			AND CU.USER_NM LIKE '%' || #{userNm} || '%'
		</if>
		<if test="@Ognl@isNotEmpty(startDate) and @Ognl@isNotEmpty(endDate)">
			AND CU.REG_DT BETWEEN #{startDate}::TIMESTAMP AND #{endDate}::TIMESTAMP
		</if>
		<if test="@Ognl@isNotEmpty(userAuthorCd)">
			AND CU.AUTHOR_CD IN
			<foreach item="item" collection="userAuthorCd" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userStatus)">
			AND CU.STATUS IN
			<foreach item="item" collection="userStatus" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userGroup)">
			AND CG.UID IN
			<foreach item="item" collection="userGroup" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userDepth)">
			AND CD.UID IN
			<foreach item="item" collection="userDepth" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userPosition)">
			AND CP.UID IN
			<foreach item="item" collection="userPosition" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		 ORDER BY CU.REG_DT DESC
		<if test="@Ognl@isNotEmpty(startNumber) and  @Ognl@isNotEmpty(endNumber)">
			OFFSET ${startNumber} LIMIT ${endNumber}
		</if>
	</select>

	<select id="userPageListCount" resultType="int" parameterType="UserListSearch">
		/* cetusUser.userPageListCount */
		SELECT COUNT(*)
		  FROM CETUS_USER CU
		  LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CU.PROFILE_UID::BIGINT AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
		 INNER JOIN CETUS_WORKPLACE_USER CWU ON CWU.USER_UID = CU.UID
		 INNER JOIN CETUS_WORKPLACE CW ON CW.UID = CWU.WORKPLACE_UID
		  LEFT JOIN CETUS_GROUP_USER CGU ON CGU.USER_UID = CU.UID
		  LEFT JOIN CETUS_GROUP CG ON CG.UID = CGU.GROUP_UID
		  LEFT JOIN CETUS_DEPT_USER CDU ON CDU.USER_UID = CU.UID
		  LEFT JOIN CETUS_DEPT CD ON CD.UID = CDU.DEPT_UID
		  LEFT JOIN CETUS_POSITION_USER CPU ON CPU.USER_UID = CU.UID
		  LEFT JOIN CETUS_POSITION CP ON CP.UID = CPU.POSITION_UID
		 WHERE 1 = 1
		   AND CWU.WORKPLACE_UID = #{workplaceUid}
		<if test="@Ognl@isNotEmpty(userId)">
			AND CU.USER_ID LIKE '%' || #{userId} || '%'
		</if>
		<if test="@Ognl@isNotEmpty(userNm)">
			AND CU.USER_NM LIKE '%' || #{userNm} || '%'
		</if>
		<if test="@Ognl@isNotEmpty(startDate) and @Ognl@isNotEmpty(endDate)">
			AND CU.REG_DT BETWEEN #{startDate}::TIMESTAMP AND #{endDate}::TIMESTAMP
		</if>
		<if test="@Ognl@isNotEmpty(userAuthorCd)">
			AND CU.AUTHOR_CD IN
			<foreach item="item" collection="userAuthorCd" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userStatus)">
			AND CU.STATUS IN
			<foreach item="item" collection="userStatus" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userGroup)">
			AND CG.UID IN
			<foreach item="item" collection="userGroup" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userDepth)">
			AND CD.UID IN
			<foreach item="item" collection="userDepth" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userPosition)">
			AND CP.UID IN
			<foreach item="item" collection="userPosition" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	</select>

	<select id="userExcelPageList" resultType="UserExcelPage" parameterType="UserListSearch">
		/* cetusUser.userExcelPageList */
		SELECT CU.USER_ID
			  ,CU.USER_NM
		      ,CU.USER_EMAIL
		      ,CASE WHEN CU.AUTHOR_CD = 'SUPER' THEN '슈퍼 권한'
		          	WHEN CU.AUTHOR_CD = 'SYSTEM' THEN '시스템 권한'
		          	WHEN CU.AUTHOR_CD = 'MANAGER' THEN '운영자 권한'
		          	WHEN CU.AUTHOR_CD = 'USER' THEN '유저 권한'
		        END AS ROLE_NM
		      ,CASE WHEN CU.STATUS = 'APPROVED' THEN '사용중'
		          	WHEN CU.STATUS = 'WAIT' THEN '승인 대기'
		          	WHEN CU.STATUS = 'STOP' THEN '정지'
				END AS STATUS_NM
			  ,CU.USE_AT
			  ,CU.APPROVE_AT
			  ,CW.NAME AS WORKPLACE_NM
			  ,COALESCE(CG.NAME, '소속 없음') AS GROUP_NM
			  ,COALESCE(CD.NAME, '부서 없음') AS DEPT_NM
			  ,COALESCE(CP.NAME, '직급 없음') AS POSITION_NM
			  ,TO_CHAR(CU.REG_DT, 'YYYY-MM-DD') AS REG_DT
		  FROM CETUS_USER CU
		  LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CU.PROFILE_UID::BIGINT AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
		 INNER JOIN CETUS_WORKPLACE_USER CWU ON CWU.USER_UID = CU.UID
		 INNER JOIN CETUS_WORKPLACE CW ON CW.UID = CWU.WORKPLACE_UID
		  LEFT JOIN CETUS_GROUP_USER CGU ON CGU.USER_UID = CU.UID
		  LEFT JOIN CETUS_GROUP CG ON CG.UID = CGU.GROUP_UID
		  LEFT JOIN CETUS_DEPT_USER CDU ON CDU.USER_UID = CU.UID
		  LEFT JOIN CETUS_DEPT CD ON CD.UID = CDU.DEPT_UID
		  LEFT JOIN CETUS_POSITION_USER CPU ON CPU.USER_UID = CU.UID
		  LEFT JOIN CETUS_POSITION CP ON CP.UID = CPU.POSITION_UID
	 	 WHERE 1 = 1
		   AND CWU.WORKPLACE_UID = #{workplaceUid}
		<if test="@Ognl@isNotEmpty(userId)">
			AND CU.USER_ID LIKE '%' || #{userId} || '%'
		</if>
		<if test="@Ognl@isNotEmpty(userNm)">
			AND CU.USER_NM LIKE '%' || #{userNm} || '%'
		</if>
		<if test="@Ognl@isNotEmpty(startDate) and @Ognl@isNotEmpty(endDate)">
			AND CU.REG_DT BETWEEN #{startDate}::TIMESTAMP AND #{endDate}::TIMESTAMP
		</if>
		<if test="@Ognl@isNotEmpty(userAuthorCd)">
			AND CU.AUTHOR_CD IN
			<foreach item="item" collection="userAuthorCd" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userStatus)">
			AND CU.STATUS IN
			<foreach item="item" collection="userStatus" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userGroup)">
			AND CG.UID IN
			<foreach item="item" collection="userGroup" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userDepth)">
			AND CD.UID IN
			<foreach item="item" collection="userDepth" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userPosition)">
			AND CP.UID IN
			<foreach item="item" collection="userPosition" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		ORDER BY CU.REG_DT DESC
		<if test="@Ognl@isNotEmpty(startNumber) and  @Ognl@isNotEmpty(endNumber)">
	   OFFSET ${startNumber} LIMIT ${endNumber}
		</if>
	</select>

	<select id="userExcelPageCount" resultType="int" parameterType="UserListSearch">
		/* cetusUser.userExcelPageCount */
		SELECT COUNT(*)
		  FROM CETUS_USER CU
		  LEFT JOIN CETUS_FILE CF ON CF.FILE_UID = CU.PROFILE_UID::BIGINT AND CF.USE_AT = 'Y' AND CF.SAVED = 'Y'
		 INNER JOIN CETUS_WORKPLACE_USER CWU ON CWU.USER_UID = CU.UID
		 INNER JOIN CETUS_WORKPLACE CW ON CW.UID = CWU.WORKPLACE_UID
		  LEFT JOIN CETUS_GROUP_USER CGU ON CGU.USER_UID = CU.UID
		  LEFT JOIN CETUS_GROUP CG ON CG.UID = CGU.GROUP_UID
		  LEFT JOIN CETUS_DEPT_USER CDU ON CDU.USER_UID = CU.UID
		  LEFT JOIN CETUS_DEPT CD ON CD.UID = CDU.DEPT_UID
		  LEFT JOIN CETUS_POSITION_USER CPU ON CPU.USER_UID = CU.UID
		  LEFT JOIN CETUS_POSITION CP ON CP.UID = CPU.POSITION_UID
	 	 WHERE 1 = 1
		   AND CWU.WORKPLACE_UID = #{workplaceUid}
		<if test="@Ognl@isNotEmpty(userId)">
			AND CU.USER_ID LIKE '%' || #{userId} || '%'
		</if>
		<if test="@Ognl@isNotEmpty(userNm)">
			AND CU.USER_NM LIKE '%' || #{userNm} || '%'
		</if>
		<if test="@Ognl@isNotEmpty(startDate) and @Ognl@isNotEmpty(endDate)">
			AND CU.REG_DT BETWEEN #{startDate}::TIMESTAMP AND #{endDate}::TIMESTAMP
		</if>
		<if test="@Ognl@isNotEmpty(userAuthorCd)">
			AND CU.AUTHOR_CD IN
			<foreach item="item" collection="userAuthorCd" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userStatus)">
			AND CU.STATUS IN
			<foreach item="item" collection="userStatus" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userGroup)">
			AND CG.UID IN
			<foreach item="item" collection="userGroup" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userDepth)">
			AND CD.UID IN
			<foreach item="item" collection="userDepth" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
		<if test="@Ognl@isNotEmpty(userPosition)">
			AND CP.UID IN
			<foreach item="item" collection="userPosition" open="(" close=")" separator=",">
				#{item}
			</foreach>
		</if>
	</select>

	<update id="updateUserStatus" parameterType="CetusUser">
		/* cetusUser.updateUserStatus */
		UPDATE CETUS_USER
		   SET UPDT_UID = #{updtUid}
		   	  ,UPDT_DT = NOW()
		   	  ,STATUS = #{status}
		 WHERE UID = #{uid}
	</update>

	<update id="updateUserAuthorCd" parameterType="CetusUser">
		/* cetusUser.updateUserAuthorCd */
		UPDATE CETUS_USER
		   SET UPDT_UID = #{updtUid}
		   	  ,UPDT_DT = NOW()
		      ,AUTHOR_CD = #{authorCd}
		 WHERE UID = #{uid}
	</update>

	<update id="updateUserProfile" parameterType="CetusUser">
		/* cetusUser.updateUserProfile */
		UPDATE CETUS_USER
		   SET UPDT_UID = #{updtUid}
			  ,UPDT_DT = NOW()
			  ,PROFILE_UID = #{profileUid}
		 WHERE UID = #{uid}
	</update>
	<select id="findByUserId" resultType="_int" parameterType="String">
		/* cetusUser.findByUserId */
		SELECT count(*)
		FROM cetus_user
		WHERE USER_ID = #{userId}
		  AND APPROVE_AT = 'Y'
		  AND USE_AT = 'Y'
	</select>

	<select id="findByEmail" resultType="_int" parameterType="String">
		/* cetusUser.findByEmail */
		SELECT count(*)
		FROM cetus_user
		WHERE USER_EMAIL = #{userEmail}
	</select>
</mapper>
