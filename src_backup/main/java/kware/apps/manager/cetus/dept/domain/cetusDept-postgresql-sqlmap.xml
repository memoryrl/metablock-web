<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cetusDept">

    <select id="findDeptTreeList" resultType="DeptTreeList" parameterType="Long">
        /* cetusDept.findDeptTreeList */
        WITH RECURSIVE DEPT_LIST(UID
                               , WORKPLACE_UID
                               , NAME
                               , DESCRIPTION
                               , SORT_ORDER
                               , USE_AT
                               , REG_UID
                               , REG_DT
                               , UPDT_UID
                               , UPDT_DT
                               , UPPER_UID
                               , DEPTH
                               , PATH_NM
                               , PATH
                               , CYCLE) AS
                        (SELECT  CD.UID
                               , CD.WORKPLACE_UID
                               , CD.NAME
                               , CD.DESCRIPTION
                               , CD.SORT_ORDER
                               , CD.USE_AT
                               , CD.REG_UID
                               , CD.REG_DT
                               , CD.UPDT_UID
                               , CD.UPDT_DT
                               , CD.UPPER_UID
                               , 1
                               , ARRAY[CD.NAME::TEXT]
                               , ARRAY[CD.UID::INT]
                               , false
                           FROM CETUS_DEPT CD
                          WHERE CD.USE_AT = 'Y'
                            AND CD.UPPER_UID IS NULL
                            AND CD.WORKPLACE_UID = #{workplaceUid}
                      UNION ALL
                         SELECT CD.UID
                              , CD.WORKPLACE_UID
                              , CD.NAME
                              , CD.DESCRIPTION
                              , CD.SORT_ORDER
                              , CD.USE_AT
                              , CD.REG_UID
                              , CD.REG_DT
                              , CD.UPDT_UID
                              , CD.UPDT_DT
                              , CD.UPPER_UID
                              , B.DEPTH + 1
                              , ARRAY_APPEND(B.PATH_NM, CD.NAME::TEXT)
                              , ARRAY_APPEND(B.PATH, CD.SORT_ORDER::INT)
                              , CD.UID = ANY(B.PATH)
                          FROM CETUS_DEPT CD
                         INNER JOIN DEPT_LIST B ON CD.UPPER_UID = B.UID
                         WHERE CD.USE_AT = 'Y'
                           AND NOT CYCLE
                           AND CD.WORKPLACE_UID = #{workplaceUid}
                    )
                    SELECT A.UID AS NO
                         , A.UPPER_UID AS UPPER_NO
                         , A.NAME AS TEXT
                         , LPAD('', DEPTH * 8) || A.SORT_ORDER AS TREE_DEPT_NM
                         , TO_CHAR(A.REG_DT, 'YYYY-MM-DD HH24:MI:SS') AS REG_DT
                         , CU_REG.USER_NM AS REG_NM
                         , TO_CHAR(A.UPDT_DT, 'YYYY-MM-DD HH24:MI:SS') AS UPDT_DT
                         , CU_UPDT.USER_NM AS UPDT_NM
                         , DEPTH
                         , REPLACE(REPLACE(array_to_string(PATH_NM, ','), ',', '<![CDATA[<]]>'), 'root <![CDATA[<]]>', '') AS DEPT_PATH
                         , CASE WHEN EXISTS(SELECT 1
                                              FROM CETUS_DEPT
                                             WHERE UPPER_UID = A.UID) THEN 'N' ELSE 'Y'
                            END AS IS_LEAF
                     FROM DEPT_LIST A
                     LEFT JOIN CETUS_USER CU_REG ON CU_REG.UID = A.REG_UID
                     LEFT JOIN CETUS_USER CU_UPDT ON CU_UPDT.UID = A.UPDT_UID
                    ORDER BY PATH
    </select>
</mapper>